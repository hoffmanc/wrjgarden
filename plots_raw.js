function paintPlots(canvas) {
    if (!canvas.getContext) return;
    var c = canvas.getContext('2d');
    c.fillStyle = "white";
    c.strokeStyle = "black";
    c.globalAlpha = "1.0";
    c.lineWidth = "1";
    c.lineCap = "butt";
    c.lineJoin = "round";
    c.mitterLimit = "1";
    c.font = "normal normal 12 Courier";
    c.setTransform(1.0, 0.0, 0.0, 1.0, -0.24755716, 2.2177243);
    c.strokeStyle = "#000000";
    c.lineWidth = "1.93935955000000004";
    c.mitterLimit = "4";
    c.strokeRect(16, 21, 121, 28);
    c.fillStyle = "#000000";
    c.strokeStyle = "black";
    c.lineWidth = "1";
    c.mitterLimit = "1";
    c.beginPath();
    c.moveTo(713.83, 60.65);
    c.lineTo(713.83, 60.65);
    c.lineTo(713.83, 60.65);
    c.lineTo(713.83, 60.65);
    c.closePath();
    c.moveTo(375.03, 111.91);
    c.bezierCurveTo(375.01, 148.35, 375.24, 185.17, 373.85, 221.97);
    c.bezierCurveTo(296.77, 225.61, 225.07, 275.35, 194.05, 345.81);
    c.bezierCurveTo(183.66, 369.34, 177.45, 394.70, 175.58, 420.39);
    c.bezierCurveTo(132.47, 419.73, 89.26, 419.60, 46.17, 420.36);
    c.bezierCurveTo(44.11, 315.47, 100.60, 212.66, 188.24, 156.33);
    c.bezierCurveTo(195.34, 156.64, 197.98, 168.84, 203.64, 173.53);
    c.bezierCurveTo(209.28, 180.32, 213.12, 190.80, 220.39, 194.23);
    c.bezierCurveTo(239.03, 181.49, 258.97, 170.59, 280.17, 162.79);
    c.bezierCurveTo(282.40, 141.82, 306.17, 137.42, 323.32, 136.51);
    c.bezierCurveTo(338.13, 136.45, 347.33, 122.65, 359.96, 119.40);
    c.bezierCurveTo(355.91, 132.30, 326.01, 143.78, 308.12, 144.72);
    c.bezierCurveTo(292.75, 143.49, 279.83, 157.86, 288.09, 172.85);
    c.bezierCurveTo(294.96, 191.49, 300.85, 210.53, 308.17, 229.04);
    c.bezierCurveTo(327.61, 224, 349.01, 215.97, 368.77, 217.69);
    c.bezierCurveTo(373.84, 217.72, 369.29, 178.28, 370.04, 165.53);
    c.bezierCurveTo(371.76, 147.59, 369.45, 128.58, 371.23, 115.30);
    c.bezierCurveTo(365.71, 116.48, 373.10, 113.02, 375.03, 111.91);
    c.lineTo(375.03, 111.91);
    c.closePath();
    c.moveTo(372.19, 115.31);
    c.bezierCurveTo(370.89, 128, 375, 112.06, 372.19, 115.31);
    c.closePath();
    c.moveTo(372.50, 118.65);
    c.bezierCurveTo(372.01, 120.71, 373.86, 117.39, 372.50, 118.65);
    c.closePath();
    c.moveTo(372.30, 120.38);
    c.bezierCurveTo(373.94, 121.53, 372.45, 118.90, 372.30, 120.38);
    c.closePath();
    c.moveTo(372.15, 124.78);
    c.bezierCurveTo(371.39, 131.23, 375.57, 122.21, 372.15, 124.78);
    c.closePath();
    c.moveTo(371.45, 145.60);
    c.bezierCurveTo(371.92, 147.11, 372.19, 143.79, 371.45, 145.60);
    c.closePath();
    c.moveTo(371.44, 147.16);
    c.bezierCurveTo(372.13, 148.12, 372.13, 146.19, 371.44, 147.16);
    c.closePath();
    c.moveTo(187.80, 163.46);
    c.bezierCurveTo(146.65, 190.71, 112.15, 228.44, 89.68, 272.18);
    c.bezierCurveTo(103.11, 279.23, 115.81, 290.02, 129.53, 295.16);
    c.bezierCurveTo(150.35, 257.03, 180.50, 224.20, 214.54, 198.07);
    c.bezierCurveTo(207.30, 185.71, 198.28, 174.83, 190.48, 162.91);
    c.lineTo(187.80, 163.46);
    c.lineTo(187.80, 163.46);
    c.lineTo(187.80, 163.46);
    c.closePath();
    c.moveTo(277.84, 170.36);
    c.bezierCurveTo(258.36, 177.61, 239.62, 187.81, 223.27, 200.13);
    c.bezierCurveTo(235.19, 218.22, 248.30, 236.36, 261.18, 254.18);
    c.bezierCurveTo(275.30, 247.04, 288.26, 237.35, 303.30, 231.88);
    c.bezierCurveTo(298.58, 211.18, 289.69, 191.10, 282.60, 170.97);
    c.lineTo(280.59, 170.07);
    c.lineTo(277.84, 170.36);
    c.bezierCurveTo(277.84, 170.36, 277.84, 170.36, 277.84, 170.36);
    c.closePath();
    c.moveTo(217.43, 203.86);
    c.bezierCurveTo(194.89, 220.93, 173.03, 240.06, 157.12, 263.59);
    c.bezierCurveTo(175.30, 277.12, 193.16, 290.45, 212.34, 302.22);
    c.bezierCurveTo(218.69, 291.75, 225.27, 293.50, 226.26, 286.27);
    c.bezierCurveTo(235.71, 275.83, 246.39, 266.58, 257.21, 257.61);
    c.bezierCurveTo(244.98, 239.03, 232.18, 220.53, 219.16, 203.04);
    c.lineTo(217.43, 203.86);
    c.lineTo(217.43, 203.86);
    c.lineTo(217.43, 203.86);
    c.closePath();
    c.moveTo(152.60, 269.23);
    c.bezierCurveTo(138.23, 290.91, 125.31, 314.04, 117.71, 338.94);
    c.bezierCurveTo(138.68, 345.27, 160.32, 351.16, 181.72, 357.91);
    c.bezierCurveTo(190.40, 341.14, 198.10, 323.06, 209.18, 307.29);
    c.bezierCurveTo(191.86, 293.38, 173.05, 281.07, 154.80, 268.15);
    c.lineTo(152.60, 269.23);
    c.bezierCurveTo(152.60, 269.23, 152.60, 269.23, 152.60, 269.23);
    c.closePath();
    c.moveTo(127.19, 341.53);
    c.bezierCurveTo(126.52, 342.49, 126.86, 340.55, 127.19, 341.53);
    c.closePath();
    c.moveTo(86.70, 276.75);
    c.bezierCurveTo(64.50, 319.18, 51.45, 366.98, 51.34, 415.17);
    c.bezierCurveTo(63.43, 410.21, 93.98, 424.68, 97.28, 409.05);
    c.bezierCurveTo(99.20, 371, 110.72, 334.11, 127.01, 300.11);
    c.bezierCurveTo(113.78, 292.76, 100.09, 281.77, 86.70, 276.75);
    c.closePath();
    c.moveTo(115.93, 343.65);
    c.bezierCurveTo(108.01, 366.39, 103.04, 391.32, 102.80, 415.47);
    c.bezierCurveTo(121.56, 407.72, 164.54, 428.90, 171.54, 406.18);
    c.bezierCurveTo(171.93, 391.31, 178.91, 375.27, 179.45, 361.84);
    c.bezierCurveTo(158.78, 355.69, 136.79, 348.88, 115.93, 343.65);
    c.closePath();
    c.moveTo(148.30, 418.20);
    c.bezierCurveTo(147.72, 420.64, 149.41, 417.16, 148.30, 418.20);
    c.closePath();
    c.moveTo(365.16, 117.67);
    c.bezierCurveTo(363.73, 123.06, 358.55, 116.48, 365.16, 117.67);
    c.closePath();
    c.moveTo(370.63, 133.42);
    c.bezierCurveTo(369.86, 133.94, 370, 132.50, 370.63, 133.42);
    c.closePath();
    c.moveTo(371.13, 216.97);
    c.bezierCurveTo(370.63, 218.10, 370.77, 216.09, 371.13, 216.97);
    c.closePath();
    c.moveTo(373.30, 231.12);
    c.bezierCurveTo(372.33, 260.97, 374.41, 292.37, 371.35, 322.27);
    c.bezierCurveTo(320.75, 324.61, 277.67, 368.75, 272.93, 418.68);
    c.bezierCurveTo(244.84, 419.68, 209.57, 421.90, 183.70, 418.05);
    c.bezierCurveTo(188.13, 320.02, 274.40, 232.83, 373.30, 231.12);
    c.closePath();
    c.moveTo(367.13, 237.40);
    c.bezierCurveTo(337.13, 239.10, 307.46, 249.32, 282.15, 265.22);
    c.bezierCurveTo(294.73, 288.21, 308.49, 311.09, 322.69, 333.15);
    c.bezierCurveTo(335.07, 320.45, 365.78, 326.92, 369.42, 310.80);
    c.bezierCurveTo(367.42, 292.57, 369.15, 266.26, 370.05, 245.67);
    c.bezierCurveTo(368.91, 244.12, 370.67, 236.67, 367.13, 237.40);
    c.closePath();
    c.moveTo(371.78, 245.18);
    c.bezierCurveTo(372.85, 245.75, 372.04, 244.57, 371.78, 245.18);
    c.closePath();
    c.moveTo(276.81, 268.47);
    c.bezierCurveTo(254.51, 283.67, 233.19, 302.97, 220.39, 326.62);
    c.bezierCurveTo(242.19, 340.93, 264.90, 353.92, 286.67, 368.22);
    c.bezierCurveTo(292.12, 353.82, 321.05, 344.30, 315.53, 330.47);
    c.bezierCurveTo(302.85, 309.91, 290.84, 288.36, 277.82, 268.30);
    c.lineTo(276.81, 268.47);
    c.bezierCurveTo(276.81, 268.47, 276.81, 268.47, 276.81, 268.47);
    c.closePath();
    c.moveTo(216.71, 331.36);
    c.bezierCurveTo(201.64, 356.76, 191.40, 385.69, 189.98, 415.27);
    c.bezierCurveTo(214.45, 409.30, 259.12, 427.65, 271.60, 406.51);
    c.bezierCurveTo(273.58, 394.52, 282.25, 382.02, 282.82, 370.89);
    c.bezierCurveTo(261.19, 357.23, 239.54, 343.94, 217.78, 330.48);
    c.lineTo(216.71, 331.36);
    c.bezierCurveTo(216.71, 331.36, 216.71, 331.36, 216.71, 331.36);
    c.closePath();
    c.moveTo(397.86, 231.32);
    c.bezierCurveTo(488.54, 237.97, 566.63, 312.81, 579.68, 402.13);
    c.bezierCurveTo(592.98, 434.38, 554.55, 419.25, 534.95, 421.76);
    c.bezierCurveTo(506.36, 426.53, 487.73, 422.75, 485.57, 393.33);
    c.bezierCurveTo(470.91, 355.91, 436.03, 326.83, 395.43, 322.65);
    c.bezierCurveTo(396.17, 292.83, 393.30, 258.43, 397.86, 231.32);
    c.closePath();
    c.moveTo(400.14, 238.33);
    c.bezierCurveTo(401.04, 265.03, 395.43, 296.22, 402.30, 319.74);
    c.bezierCurveTo(414.32, 316.43, 430.79, 337.31, 438.03, 324.79);
    c.bezierCurveTo(451.49, 304.16, 463.77, 283.57, 477.21, 263.17);
    c.bezierCurveTo(456.95, 250.58, 434.76, 244.11, 411.95, 239.11);
    c.bezierCurveTo(408.07, 238.96, 403.99, 236.75, 400.14, 238.33);
    c.closePath();
    c.moveTo(480.61, 266.11);
    c.bezierCurveTo(466.57, 288.25, 452.72, 310.21, 438.84, 332.50);
    c.bezierCurveTo(452.87, 342.02, 465.53, 353.08, 475.80, 366.89);
    c.bezierCurveTo(498.08, 353.53, 520.41, 340.42, 542.73, 326.86);
    c.bezierCurveTo(538.98, 314.45, 525.58, 302.31, 517.33, 293.01);
    c.bezierCurveTo(506.52, 283.03, 493.56, 270.40, 480.61, 266.11);
    c.closePath();
    c.moveTo(545.33, 330.74);
    c.bezierCurveTo(523.34, 344.34, 500.58, 356.88, 478.47, 371.35);
    c.bezierCurveTo(488.16, 384.75, 491, 402.82, 496.61, 416.75);
    c.bezierCurveTo(522.74, 416.69, 549.15, 418.55, 575.17, 417.05);
    c.bezierCurveTo(573.78, 386.63, 563.17, 355.99, 546.67, 331.01);
    c.lineTo(545.33, 330.74);
    c.lineTo(545.33, 330.74);
    c.lineTo(545.33, 330.74);
    c.closePath();
    c.moveTo(371.71, 336.38);
    c.bezierCurveTo(373.64, 363.11, 371.94, 392.83, 372.77, 420.33);
    c.bezierCurveTo(345.25, 420.35, 317.45, 420.53, 289.93, 419.90);
    c.bezierCurveTo(287.94, 406.18, 296.44, 390.54, 303.46, 378.18);
    c.bezierCurveTo(318.32, 355.04, 345.97, 337.91, 371.71, 336.38);
    c.closePath();
    c.moveTo(364.76, 340.32);
    c.bezierCurveTo(343.29, 344.58, 322.02, 356.20, 309.73, 374.61);
    c.bezierCurveTo(297.60, 395.44, 308.09, 378.09, 297.55, 395.39);
    c.bezierCurveTo(295.90, 401.78, 286.54, 418.13, 297.91, 415.34);
    c.bezierCurveTo(315.83, 418.09, 335.96, 415.16, 355.89, 416.03);
    c.bezierCurveTo(362.70, 416.63, 371.90, 417.47, 368.45, 407.47);
    c.bezierCurveTo(367.83, 385.84, 369.69, 361.11, 366.86, 339.62);
    c.lineTo(366.31, 339.79);
    c.lineTo(364.76, 340.32);
    c.lineTo(364.76, 340.32);
    c.lineTo(364.76, 340.32);
    c.closePath();
    c.moveTo(303.91, 415.94);
    c.bezierCurveTo(304.23, 416.93, 304.57, 414.98, 303.91, 415.94);
    c.closePath();
    c.moveTo(302.53, 417.49);
    c.bezierCurveTo(303.71, 416.85, 301.76, 416.71, 302.53, 417.49);
    c.closePath();
    c.moveTo(358.01, 417.30);
    c.bezierCurveTo(358.05, 419.09, 360.51, 415.84, 358.01, 417.30);
    c.closePath();
    c.moveTo(303.23, 417.86);
    c.bezierCurveTo(304.30, 419.73, 303.99, 415.67, 303.23, 417.86);
    c.closePath();
    c.moveTo(356.69, 417.45);
    c.bezierCurveTo(357.75, 418.02, 356.94, 416.85, 356.69, 417.45);
    c.closePath();
    c.moveTo(302.25, 419.24);
    c.bezierCurveTo(302.72, 418.97, 301.81, 417.76, 302.25, 419.24);
    c.closePath();
    c.moveTo(398.33, 336.99);
    c.bezierCurveTo(438.90, 343.69, 473.46, 378.69, 477.03, 420.32);
    c.bezierCurveTo(453.92, 413.97, 399.16, 435.46, 395.03, 408.97);
    c.bezierCurveTo(396.29, 385.14, 393.10, 359.89, 395.88, 337.02);
    c.lineTo(398.33, 336.99);
    c.lineTo(398.33, 336.99);
    c.lineTo(398.33, 336.99);
    c.lineTo(398.33, 336.99);
    c.closePath();
    c.moveTo(399.58, 340.52);
    c.bezierCurveTo(405, 370.10, 379.06, 432.72, 432.14, 416.18);
    c.bezierCurveTo(461.79, 423.13, 485.40, 416.92, 464.31, 388.31);
    c.bezierCurveTo(451.19, 363.41, 427.10, 345.70, 399.58, 340.52);
    c.closePath();
    c.moveTo(372.62, 442.59);
    c.bezierCurveTo(372.48, 470.51, 371.74, 498.81, 372.82, 526.81);
    c.bezierCurveTo(330.57, 522.52, 292.69, 485.48, 289.51, 442.74);
    c.bezierCurveTo(316.53, 441.08, 345.33, 443.68, 372.62, 442.59);
    c.closePath();
    c.moveTo(306.87, 447.45);
    c.bezierCurveTo(283.26, 440.10, 296.75, 462.88, 300.87, 473.24);
    c.bezierCurveTo(308.06, 485.22, 298.97, 469.07, 308.27, 485.50);
    c.bezierCurveTo(322.27, 504.95, 344.10, 518.67, 367.67, 523.11);
    c.bezierCurveTo(367.96, 498.76, 370.59, 472.04, 367.39, 447.90);
    c.bezierCurveTo(350.27, 448.07, 326.14, 447.15, 306.87, 447.45);
    c.closePath();
    c.moveTo(272.87, 442.75);
    c.bezierCurveTo(277.20, 488.93, 312.75, 530.01, 358.33, 540.01);
    c.bezierCurveTo(342.92, 544.04, 327.38, 526.23, 315.24, 528.35);
    c.bezierCurveTo(307.07, 540.47, 306.47, 538.43, 301.62, 549.81);
    c.bezierCurveTo(293.37, 564.40, 282.63, 578.16, 275.75, 593.34);
    c.bezierCurveTo(303.22, 610.96, 334.70, 623.35, 367.88, 624.71);
    c.bezierCurveTo(360.22, 600.70, 385.31, 549.23, 355.18, 542.54);
    c.bezierCurveTo(353.84, 538.36, 383.07, 540.01, 372.39, 557.91);
    c.bezierCurveTo(371.85, 582.39, 372.82, 606.90, 371.82, 631.11);
    c.bezierCurveTo(308.15, 629.66, 247.49, 592.27, 215.13, 537.98);
    c.bezierCurveTo(195.65, 510.88, 185.36, 476.21, 184.43, 443.11);
    c.bezierCurveTo(213.62, 442.64, 244.29, 441.66, 272.87, 442.75);
    c.closePath();
    c.moveTo(225.40, 447.26);
    c.bezierCurveTo(213.59, 448.14, 202.19, 447.04, 190.38, 447.87);
    c.bezierCurveTo(191.01, 474.97, 200.88, 501.88, 213.65, 525.73);
    c.bezierCurveTo(229.09, 521.21, 243.29, 508.26, 258.26, 500.39);
    c.bezierCurveTo(265.61, 494.56, 276.84, 491.26, 281.67, 483.88);
    c.bezierCurveTo(275.80, 472.53, 272.82, 459.99, 269.57, 447.64);
    c.bezierCurveTo(254.85, 447.39, 240.10, 447.52, 225.40, 447.26);
    c.closePath();
    c.moveTo(282.50, 490.69);
    c.bezierCurveTo(260.89, 504.20, 238.91, 517.21, 217.46, 530.91);
    c.bezierCurveTo(218.13, 542.21, 221.73, 537.96, 230.98, 551.28);
    c.bezierCurveTo(242.22, 566.04, 255.80, 579.38, 271.18, 589.51);
    c.bezierCurveTo(285.53, 567.68, 299.92, 545.37, 313.15, 522.81);
    c.bezierCurveTo(301.26, 514.24, 292.37, 498, 282.50, 490.69);
    c.closePath();
    c.moveTo(399.59, 442.68);
    c.bezierCurveTo(425.60, 443.96, 451.61, 442.86, 477.59, 444.04);
    c.bezierCurveTo(472.67, 485.43, 436.18, 524.74, 394.71, 525.85);
    c.bezierCurveTo(398.62, 500.41, 388.51, 459.32, 399.59, 442.68);
    c.closePath();
    c.moveTo(413.03, 448.12);
    c.bezierCurveTo(401.83, 445.55, 403.11, 466.20, 405.33, 448.47);
    c.bezierCurveTo(396.97, 456.49, 391.83, 517.62, 406.62, 521.62);
    c.bezierCurveTo(440.70, 513.19, 467.86, 483.33, 473.29, 448.89);
    c.bezierCurveTo(453.21, 449.06, 433.08, 448.28, 413.03, 448.12);
    c.closePath();
    c.moveTo(159.49, 442.60);
    c.bezierCurveTo(182.84, 434.43, 175.12, 458.78, 179.87, 471.55);
    c.bezierCurveTo(184.57, 494.76, 193.23, 517.15, 205.12, 537.71);
    c.bezierCurveTo(193.74, 539.90, 192.19, 523.19, 187.44, 515.42);
    c.bezierCurveTo(184.72, 509.86, 182.04, 497.08, 176.01, 501.96);
    c.bezierCurveTo(156.91, 507.56, 137.37, 513.98, 117.94, 519.72);
    c.bezierCurveTo(122.20, 528.95, 121.50, 545.82, 114.59, 530.68);
    c.bezierCurveTo(103.50, 502.82, 98.38, 472.34, 96.51, 442.86);
    c.bezierCurveTo(117.49, 442.44, 138.52, 442.81, 159.49, 442.60);
    c.closePath();
    c.moveTo(147.55, 445.46);
    c.bezierCurveTo(147.40, 449.45, 148.67, 440.84, 147.55, 445.46);
    c.closePath();
    c.moveTo(147.31, 447.70);
    c.bezierCurveTo(131.80, 447.43, 117.14, 447.52, 103.08, 447.79);
    c.bezierCurveTo(103.35, 470.56, 108.19, 494.86, 116.27, 515.69);
    c.bezierCurveTo(136.20, 509.36, 158.54, 502.66, 178.98, 495.69);
    c.bezierCurveTo(174.92, 479.92, 173.55, 463.03, 169.48, 447.69);
    c.bezierCurveTo(162.12, 448.14, 154.54, 447.62, 147.31, 447.69);
    c.lineTo(147.31, 447.70);
    c.closePath();
    c.moveTo(503.10, 443.90);
    c.bezierCurveTo(523.73, 452.06, 574.07, 432.52, 581.28, 451.46);
    c.bezierCurveTo(574.81, 530.87, 516.15, 602.66, 439.06, 624.06);
    c.bezierCurveTo(422.61, 627.07, 384.97, 643.69, 394.90, 612.78);
    c.bezierCurveTo(397.93, 582.43, 377.17, 538.93, 418.42, 536.97);
    c.bezierCurveTo(459.51, 524.59, 486.62, 484.97, 493.06, 444.06);
    c.bezierCurveTo(496.39, 444.52, 499.77, 443.48, 503.10, 443.90);
    c.closePath();
    c.moveTo(579.72, 447.73);
    c.bezierCurveTo(579.76, 448.98, 581.40, 446.75, 579.72, 447.73);
    c.closePath();
    c.moveTo(496.58, 448.91);
    c.bezierCurveTo(491.41, 460.18, 489.82, 475.88, 482.17, 487.38);
    c.bezierCurveTo(477.54, 495.68, 492.37, 497.40, 497.01, 502.91);
    c.bezierCurveTo(513.50, 513.15, 529.91, 524.06, 546.74, 534.29);
    c.bezierCurveTo(562.15, 506.38, 551.47, 530.13, 555.98, 518.93);
    c.bezierCurveTo(566.24, 497.09, 574.43, 473.46, 574.62, 449.16);
    c.bezierCurveTo(565.98, 450.49, 553.01, 449.16, 543.86, 449.65);
    c.bezierCurveTo(529.15, 449.41, 510.19, 449.26, 498.31, 448.96);
    c.bezierCurveTo(500.15, 446.63, 496.82, 450.31, 496.58, 448.91);
    c.lineTo(496.58, 448.91);
    c.closePath();
    c.moveTo(556.52, 449.91);
    c.bezierCurveTo(555.85, 450.87, 556.19, 448.92, 556.52, 449.91);
    c.closePath();
    c.moveTo(570.64, 449.30);
    c.bezierCurveTo(570.98, 449.91, 571.52, 447.66, 570.64, 449.30);
    c.closePath();
    c.moveTo(476.95, 496.38);
    c.bezierCurveTo(471.19, 512.67, 440.97, 521.71, 446.56, 536.52);
    c.bezierCurveTo(459.29, 556.64, 470.68, 578.23, 484.17, 597.19);
    c.bezierCurveTo(508.58, 582.78, 530, 562.95, 544.12, 538.38);
    c.bezierCurveTo(537.17, 536.92, 536.16, 532.40, 526.46, 526.69);
    c.bezierCurveTo(509.55, 517.50, 494.04, 504.63, 476.95, 496.38);
    c.closePath();
    c.moveTo(436.35, 533.39);
    c.bezierCurveTo(423.56, 540.59, 411.38, 541.46, 399.63, 545.17);
    c.bezierCurveTo(405.92, 571.38, 378.92, 640.50, 425.41, 621.21);
    c.bezierCurveTo(444.25, 616.80, 462.93, 610.16, 479.34, 599.84);
    c.bezierCurveTo(468.42, 580.31, 455.15, 560.71, 446.02, 542.66);
    c.bezierCurveTo(441.66, 541.62, 441.15, 531.51, 436.35, 533.39);
    c.closePath();
    c.moveTo(406.76, 541.60);
    c.bezierCurveTo(409.61, 543.06, 411.12, 539.92, 406.76, 541.60);
    c.closePath();
    c.moveTo(404.06, 541.98);
    c.bezierCurveTo(405.58, 543.29, 405.11, 540.09, 404.06, 541.98);
    c.closePath();
    c.moveTo(401.98, 542.01);
    c.bezierCurveTo(403.05, 542.57, 402.23, 541.40, 401.98, 542.01);
    c.closePath();
    c.moveTo(400.29, 542.22);
    c.bezierCurveTo(402.95, 543.16, 400.86, 541.62, 400.29, 542.22);
    c.closePath();
    c.moveTo(447.33, 542.65);
    c.bezierCurveTo(448.75, 543.64, 448.75, 541.66, 447.33, 542.65);
    c.closePath();
    c.moveTo(123.54, 537.86);
    c.bezierCurveTo(130.84, 552.14, 137.16, 569.22, 146.91, 580.93);
    c.bezierCurveTo(164.70, 568.58, 183.43, 557.48, 201.62, 545.21);
    c.bezierCurveTo(197.35, 530.62, 211.81, 544.58, 214.54, 551.76);
    c.bezierCurveTo(249.36, 602.70, 307.36, 635.04, 368.92, 639.85);
    c.bezierCurveTo(372.84, 657.46, 382.23, 710.82, 361.06, 714.15);
    c.bezierCurveTo(277.86, 710.66, 198.67, 665.64, 150.78, 598.74);
    c.bezierCurveTo(137.16, 580.33, 125.98, 559.30, 118.02, 537.72);
    c.bezierCurveTo(119.79, 538.27, 121.78, 537.79, 123.54, 537.86);
    c.closePath();
    c.moveTo(203.66, 549.44);
    c.bezierCurveTo(185.40, 561.30, 167.01, 572.74, 149.03, 585.37);
    c.bezierCurveTo(164.90, 609.93, 184.05, 632.16, 207.67, 648.87);
    c.bezierCurveTo(221.39, 631.86, 235.76, 614.55, 247.35, 596.57);
    c.bezierCurveTo(230.49, 583.44, 217.58, 565.07, 204.53, 549.15);
    c.lineTo(203.66, 549.44);
    c.lineTo(203.66, 549.44);
    c.lineTo(203.66, 549.44);
    c.closePath();
    c.moveTo(250.35, 601.20);
    c.bezierCurveTo(237.88, 618.42, 224.22, 635.12, 211.30, 652.20);
    c.bezierCurveTo(231.81, 668.32, 255.17, 681.57, 279.83, 690.24);
    c.bezierCurveTo(286.71, 670.14, 295.44, 649.70, 300.51, 629.52);
    c.bezierCurveTo(282.96, 622.18, 267.07, 611.67, 251.58, 600.76);
    c.lineTo(250.35, 601.20);
    c.bezierCurveTo(250.35, 601.20, 250.35, 601.20, 250.35, 601.20);
    c.closePath();
    c.moveTo(291.77, 650.49);
    c.bezierCurveTo(290.94, 651.29, 291.56, 649.53, 291.77, 650.49);
    c.closePath();
    c.moveTo(305.35, 632.36);
    c.bezierCurveTo(300.98, 645.79, 293.36, 664.01, 288.30, 679.46);
    c.bezierCurveTo(279.32, 692.92, 293.69, 696.32, 304.95, 699.08);
    c.bezierCurveTo(325.37, 705.12, 346.65, 707.98, 367.85, 708.94);
    c.bezierCurveTo(368.55, 688.39, 369.78, 665.52, 368.05, 645.71);
    c.bezierCurveTo(347.71, 641.99, 325.99, 640.18, 306.41, 632);
    c.lineTo(305.35, 632.36);
    c.lineTo(305.35, 632.36);
    c.lineTo(305.35, 632.36);
    c.closePath();
    c.moveTo(358.50, 641.05);
    c.bezierCurveTo(359.55, 642.04, 359.55, 640.07, 358.50, 641.05);
    c.closePath();
    c.moveTo(358.95, 643.01);
    c.bezierCurveTo(360.06, 644.25, 360.05, 639.86, 358.95, 643.01);
    c.closePath();
    c.moveTo(204.02, 648.20);
    c.bezierCurveTo(204.26, 649.62, 204.66, 646.78, 204.02, 648.20);
    c.closePath();
    c.moveTo(348.26, 539.96);
    c.bezierCurveTo(346.84, 540.95, 346.84, 538.96, 348.26, 539.96);
    c.closePath();
    c.moveTo(559.84, 630.83);
    c.bezierCurveTo(606.13, 632.71, 652.97, 630.31, 698.94, 633.33);
    c.bezierCurveTo(693.15, 658.06, 718.11, 716.85, 673.15, 703.72);
    c.bezierCurveTo(663.53, 718.06, 672.30, 741.23, 673.90, 754.60);
    c.bezierCurveTo(664.15, 760.02, 645.22, 754.82, 655.33, 738.69);
    c.bezierCurveTo(660.87, 727.74, 663.08, 688.38, 630.72, 703.25);
    c.bezierCurveTo(621.14, 706.87, 593.71, 694.16, 597.24, 711.94);
    c.bezierCurveTo(597.82, 721.75, 595.81, 733.65, 598.59, 741.98);
    c.bezierCurveTo(602.26, 740.10, 597.30, 749.59, 598.61, 753.51);
    c.bezierCurveTo(589.23, 760.21, 581.40, 750.41, 582.56, 740.67);
    c.bezierCurveTo(587.73, 727.61, 592.67, 691.21, 562.80, 702.65);
    c.bezierCurveTo(549.37, 692.25, 559.11, 647.29, 559.84, 630.83);
    c.closePath();
    c.moveTo(598.32, 636.46);
    c.bezierCurveTo(586.61, 638.32, 574.31, 635.93, 562.36, 637);
    c.bezierCurveTo(563.17, 666.40, 549.63, 711.30, 595.09, 697.21);
    c.bezierCurveTo(624.59, 691.74, 675.80, 708.78, 693.76, 691.38);
    c.bezierCurveTo(693.41, 664.20, 704.97, 624.12, 662.83, 637.68);
    c.bezierCurveTo(641.51, 636.86, 618.97, 638.52, 598.32, 636.46);
    c.closePath();
    c.moveTo(588.77, 703.15);
    c.bezierCurveTo(589.92, 716.26, 585.19, 735.50, 592.29, 742.74);
    c.bezierCurveTo(593.41, 736.20, 600.67, 698.54, 588.77, 703.15);
    c.closePath();
    c.moveTo(661.14, 703.88);
    c.bezierCurveTo(659.72, 719.49, 660.57, 767.19, 665.97, 741.86);
    c.bezierCurveTo(664.24, 732.45, 672.72, 703.72, 661.14, 703.88);
    c.closePath();
    c.moveTo(588.78, 740.54);
    c.bezierCurveTo(587.58, 753.03, 584.33, 740.23, 588.78, 740.54);
    c.lineTo(588.78, 740.54);
    c.closePath();
    c.moveTo(597.78, 743.84);
    c.bezierCurveTo(595.66, 749.32, 601.17, 742.86, 597.78, 743.84);
    c.closePath();
    c.moveTo(660.92, 751.10);
    c.bezierCurveTo(661.99, 754.21, 662.31, 747.70, 660.92, 751.10);
    c.closePath();
    c.moveTo(600.48, 736.60);
    c.bezierCurveTo(598.15, 740.45, 599.08, 736.27, 600.48, 736.60);
    c.closePath();
    c.moveTo(605.87, 738.96);
    c.bezierCurveTo(605.18, 742.43, 603.74, 738.08, 605.87, 738.96);
    c.closePath();
    c.moveTo(602.88, 744.01);
    c.bezierCurveTo(598.81, 747.77, 604.77, 739.91, 602.88, 744.01);
    c.closePath();
    c.moveTo(601.06, 745.97);
    c.bezierCurveTo(602.11, 748.28, 598.06, 746.50, 601.06, 745.97);
    c.closePath();
    c.moveTo(70.97, 784.02);
    c.bezierCurveTo(71.70, 785.74, 69.92, 783.64, 70.97, 784.02);
    c.closePath();
    c.fill();
    c.stroke();
    c.fillStyle = "#020001";
    c.font = "normal normal 12.60707283000000167px Arial Black";
    c.fillText("Harrison Ave", 45.077042, 40.04237);
    c.setTransform(-0.00333096, 0.30473706, -0.37559889, 0.00606098, 45.88532784, 29.0727313);
    c.strokeStyle = "#010002";
    c.font = "normal normal 12 Courier";
    c.lineWidth = "5";
    c.lineCap = "round";
    c.beginPath();
    c.moveTo(5.04, 31.21);
    c.lineTo(56.14, 31.21);
    c.stroke();
    c.beginPath();
    c.moveTo(16.54, 21.59);
    c.lineTo(3.62, 30.87);
    c.lineTo(16.23, 41.19);
    c.stroke();
    c.setTransform(1.0, 0.0, 0.0, 1.0, -0.24755716, 2.2177243);
    c.fillStyle = "#000000";
    c.lineWidth = "1";
    c.lineCap = "butt";
    c.font = "normal normal 15.39043331px Arial Black";
    c.fillText("Tool Shed", 76.266281, 700.28882);
    c.strokeStyle = "#000000";
    c.lineWidth = "3.9000001";
    c.mitterLimit = "4";
    c.font = "normal normal 12 Courier";
    c.strokeRect(20, 671, 202, 122);
    c.fillStyle = "#000000";
    c.lineWidth = "1";
    c.mitterLimit = "1";
    c.font = "normal normal 15px Arial Black";
    c.fillText("White River", 580, 653);
    c.fillText("Community", 580, 671);
    c.fillText("Garden", 600, 689);
    c.strokeStyle = "#000000";
    c.lineWidth = "3.9000001";
    c.mitterLimit = "4";
    c.font = "normal normal 12 Courier";
    c.strokeRect(2, 0, 741, 809);
    c.setTransform(1.0, 0.0, 0.0, 1.0, -3.54389296, 4.4152815);
    c.fillStyle = "white";
    c.strokeStyle = "black";
    c.lineWidth = "1";
    c.mitterLimit = "1";
    c.strokeStyle = "#000000";
    c.lineWidth = "2.35026956";
    c.mitterLimit = "4";
    c.strokeRect(557, 772, 181, 27);
    c.fillStyle = "#010000";
    c.lineWidth = "1";
    c.mitterLimit = "1";
    c.font = "normal normal 12.60707283px Arial Black";
    c.fillText("Latham Works LN", 566.79639, 790.53168);
    c.setTransform(-0.55316632, 2.0620506E-4, -0.00222293, -0.68198039, 723.02422704, 811.9403615);
    c.strokeStyle = "#000200";
    c.font = "normal normal 12 Courier";
    c.lineWidth = "5";
    c.lineCap = "round";
    c.beginPath();
    c.moveTo(5.04, 31.21);
    c.lineTo(56.14, 31.21);
    c.stroke();
    c.beginPath();
    c.moveTo(16.54, 21.59);
    c.lineTo(3.62, 30.87);
    c.lineTo(16.23, 41.19);
    c.stroke();
    c.setTransform(1.0, 0.0, 0.0, 1.0, -3.54389296, 4.4152815);
    c.setTransform(1.0, 0.0, 0.0, 1.0, -0.24755716, 2.2177243);
    c.strokeStyle = "#010103";
    c.lineWidth = "2.5";
    c.lineCap = "butt";
    c.mitterLimit = "4";
    c.strokeRect(624, 212, 91, 62);
    c.strokeRect(623, 303, 91, 62);
    c.fillStyle = "#000000";
    c.lineWidth = "1";
    c.mitterLimit = "1";
    c.font = "normal normal 15.39043331px Arial Black";
    c.fillText("Compost", 625.82227, 294.21945);
    c.font = "normal normal 28px Bitstream Vera Sans";
    c.fillText("N", 370.94821, 102.46808);
    c.fillText("E", 630.15802, 443.23041);
    c.fillText("S", 363.61438, 772.0827);
    c.fillText("W", 6.9925861, 446.3382);
    c.font = "normal normal 20px Bitstream Vera Sans";
    var plotCoords = {
        "1": [419.98099, 391.74869],
        "2": [334.61316, 388.73798],
        "3": [335.00165, 483.91483],
        "4": [419.68961, 485.08026],
        "5": [521.85901, 385.2417],
        "6": [480.68048, 325.41626],
        "7": [417.74722, 285.79163],
        "8": [327.62057, 286.56857],
        "9": [263.13342, 330.07797],
        "10": [221.15327, 386.92474],
        "11": [220.37375, 485.14554],
        "12": [254.67308, 544.38983],
        "13": [314.6969, 579.46869],
        "14": [414.47678, 584.92542],
        "15": [474.50061, 549.84656],
        "16": [515.03619, 485.14554],
        "17": [322.49222, 182.68782],
        "18": [251.55496, 218.5462],
        "19": [193.86972, 260.64084],
        "20": [149.43649, 324.56232],
        "21": [124.49153, 390.82239],
        "22": [125.27106, 483.58649],
        "23": [147.87744, 543.61029],
        "24": [184.51537, 605.97272],
        "25": [246.87778, 648.84686],
        "26": [318.59454, 678.46906],
        "27": [136.96402, 234.91635],
        "28": [70.703949, 351.84589]
    };
    for(var pc in plotCoords){
        c.fillText(pc, plotCoords[pc][0], plotCoords[pc][1]);
    }
    c.setTransform(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
    c.font = "normal normal 40px Bitstream Vera Sans";
    c.fillText("", 246.33154, 479.28137);
    c.setTransform(1.0, 0.0, 0.0, 1.0, -0.24755716, 2.2177243);
    c.font = "normal normal 16.12696648px Arial Black";
    c.setTransform(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
    return plotCoords;
}

